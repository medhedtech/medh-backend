{
  "collection": {
    "item": [
      {
        "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
        "name": "AI Health Check",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0a227839-1afa-4093-a758-775891efdece",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
            }
          }
        ]
      },
      {
        "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
        "name": "Blog Generation Stats",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "stats"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
            }
          }
        ]
      },
      {
        "id": "bc52447e-688b-449d-ba93-4884fcae9027",
        "name": "Generate Blog From Prompt",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "generate-from-prompt"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
              ],
              "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
            }
          }
        ]
      },
      {
        "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
        "name": "Generate Blog Content",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "generate-content"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
              ],
              "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
            }
          }
        ]
      },
      {
        "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
        "name": "Blog Suggestions",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "suggestions"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"topic\": \"AI in Education\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
              ],
              "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
            }
          }
        ]
      },
      {
        "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
        "name": "Enhance Existing Blog",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "enhance"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
            }
          }
        ]
      },
      {
        "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
        "name": "Meta Description",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "meta-description"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
            }
          }
        ]
      },
      {
        "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
        "name": "Generate Tags",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "blog",
              "tags"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
            }
          }
        ]
      },
      {
        "id": "aa019a72-07b8-4c05-a844-41b432418224",
        "name": "Legacy Content Enhance",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "content",
              "enhance"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
            }
          }
        ]
      },
      {
        "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
        "name": "Legacy Content Suggestions",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "content",
              "suggestions"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
            }
          }
        ]
      },
      {
        "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
        "name": "Legacy Content Meta Description",
        "request": {
          "url": {
            "path": [
              "api",
              "ai",
              "content",
              "meta-description"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
              ],
              "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:8080/api/v1",
        "key": "base_url"
      },
      {
        "type": "string",
        "value": "your_auth_token_here",
        "key": "auth_token"
      }
    ],
    "info": {
      "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
      "name": "Medh AI API",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Postman collection for testing Medh AI API endpoints",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "2f30fe5a-3a94-490c-a1c9-a863a7adc29c",
    "values": [
      {
        "type": "any",
        "value": "test-token",
        "key": "auth_token"
      }
    ]
  },
  "globals": {
    "id": "b043b8ac-e3da-492b-b93a-48669b088c8c",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 25,
        "pending": 0,
        "failed": 25
      },
      "testScripts": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.909090909090909,
      "responseMin": 3,
      "responseMax": 36,
      "responseSd": 9.149809192789917,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1750794148422,
      "completed": 1750794148701
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1382be16-30dc-475c-a316-2c19c0ea9f80",
          "httpRequestId": "5220d732-9183-423a-a2f7-4d43aa578ee3"
        },
        "item": {
          "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a227839-1afa-4093-a758-775891efdece",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "27422c89-cbdd-49ba-b433-462734360e75",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e7c34252-9641-4e8c-8814-69699eaf50c8",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 36,
          "responseSize": 27
        },
        "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "2cbebf0a-612f-4d01-b3a7-e8fa6307431b",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5623502c-4315-46da-ac2a-bd8a4fac077c"
        },
        "item": {
          "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
          "name": "Blog Generation Stats",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "stats"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2298bcd2-876a-4c4b-9685-e4c90d8732f4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "99c9af8c-57f5-4c1b-aaee-e25d54ae6eca",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 27
        },
        "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e1627bce-fb2a-4c8c-a30c-3ef641152175",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "41eff93c-ce79-4359-8c39-cd0386a84493"
        },
        "item": {
          "id": "bc52447e-688b-449d-ba93-4884fcae9027",
          "name": "Generate Blog From Prompt",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-from-prompt"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "generate-from-prompt"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "669311c4-831a-4d9e-a869-b2b1ed2c0d0d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "107",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
          }
        },
        "response": {
          "id": "f820c47e-c7ca-4b7b-985b-1a352035f256",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 27
        },
        "id": "bc52447e-688b-449d-ba93-4884fcae9027",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:3)"
            }
          },
          {
            "assertion": "Data payload exists",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Data payload exists",
              "message": "expected undefined to exist",
              "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "acba70e0-a88f-4535-9ba0-566577eca7bf",
          "length": 11,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9f8968d-3697-49a2-9c04-20613f84b060"
        },
        "item": {
          "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
          "name": "Generate Blog Content",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-content"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "generate-content"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d5fb7e26-bc9d-4683-a8c8-964e34014d10",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "102",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
          }
        },
        "response": {
          "id": "30aeb25c-334f-4bea-b35d-4ee3939565ac",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 27
        },
        "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:4)"
            }
          },
          {
            "assertion": "Generated content exists",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Generated content exists",
              "message": "expected undefined to exist",
              "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b982b286-0957-47a1-8a27-09b84b9e13e9",
          "length": 11,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8fb5cabb-c3a4-48df-915e-0565e762ee0d"
        },
        "item": {
          "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
          "name": "Blog Suggestions",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "suggestions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"AI in Education\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                ],
                "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "suggestions"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "77ddac26-6b49-40d1-8975-0d180fc693a7",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "32",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"topic\": \"AI in Education\"\n}"
          }
        },
        "response": {
          "id": "99b4a641-5977-46d7-a3bf-fbac445cdcd1",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 27
        },
        "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:5)"
            }
          },
          {
            "assertion": "Suggestions list is array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Suggestions list is array",
              "message": "expected undefined to be an array",
              "stack": "AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "dc1633b0-311b-4a28-8c12-8a85bfd1420b",
          "length": 11,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e42f536b-e277-4046-ae63-d26dffa4e2ee"
        },
        "item": {
          "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
          "name": "Enhance Existing Blog",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "enhance"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "enhance"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "42d5eecb-0a46-4a6c-a164-bd2128fcc767",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "58",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
          }
        },
        "response": {
          "id": "41450018-6d63-4c92-863b-0086448dcbc2",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 27
        },
        "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ffe1ce71-a6e6-4e55-8d8a-91d69855a22e",
          "length": 11,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa4e6f49-410e-43cd-b236-2a215bdaa278"
        },
        "item": {
          "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
          "name": "Meta Description",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "meta-description"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "meta-description"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a8df32bc-a93e-4497-b4b1-6c0627da5b8e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "34",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
          }
        },
        "response": {
          "id": "0d57ab40-ff9a-4b5b-957b-f60c4f937ef5",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 27
        },
        "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f1cbcddc-b00f-4919-8dc8-2226c9c3883b",
          "length": 11,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c58be006-7413-4198-8978-40ca2c41f360"
        },
        "item": {
          "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
          "name": "Generate Tags",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "tags"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "blog",
              "tags"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0137d1da-4b51-484d-b6b4-b6c5e202eead",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "33",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
          }
        },
        "response": {
          "id": "c83ffaf8-c9c4-4a1b-a632-723daa120044",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 27
        },
        "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d164010e-4e40-4976-90c8-96fdbdc22c15",
          "length": 11,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "65f1c995-8a39-4ee5-b341-1178aabe2965"
        },
        "item": {
          "id": "aa019a72-07b8-4c05-a844-41b432418224",
          "name": "Legacy Content Enhance",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "enhance"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "content",
              "enhance"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2956be3f-c5d9-4ace-a9e1-a5dc5a8bf770",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "38",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
          }
        },
        "response": {
          "id": "34a1ea07-a637-454c-81fd-b8c901d58117",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 27
        },
        "id": "aa019a72-07b8-4c05-a844-41b432418224",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e56c2694-d2bc-4da1-89b3-d3e8e837dc4a",
          "length": 11,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f9fa84e-cec2-4d91-b8c0-9c8f6f1076c6"
        },
        "item": {
          "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
          "name": "Legacy Content Suggestions",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "suggestions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "content",
              "suggestions"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c599f88d-80e5-4ed0-baea-57fb9f10cd41",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "39",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
          }
        },
        "response": {
          "id": "eaab72b7-7d13-4cd2-970c-9626d23a147b",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 27
        },
        "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "14c8c109-f42d-45f8-b253-b0068b76e0ac",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c90054b6-7537-4af5-ba67-49549187b3d2"
        },
        "item": {
          "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
          "name": "Legacy Content Meta Description",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "meta-description"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "api",
              "ai",
              "content",
              "meta-description"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer test-token"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d8e9c92a-05e1-4e4d-a5db-b5df3adbe89e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "33",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
          }
        },
        "response": {
          "id": "8ee6aeae-d5d4-47cf-bf8a-961b60b30b27",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 19:42:28 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 27
        },
        "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 297
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "4174ab55415cd8b91968c41aa1025020",
          "id": "8ca4e750-4008-41cb-a077-4f9facb5e7c0",
          "timestamp": 1750794148485,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a227839-1afa-4093-a758-775891efdece",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1382be16-30dc-475c-a316-2c19c0ea9f80",
          "httpRequestId": "5220d732-9183-423a-a2f7-4d43aa578ee3",
          "scriptId": "0a227839-1afa-4093-a758-775891efdece",
          "execution": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "f8f1fad9e7a5bab082652e193760e313",
          "id": "7d54c914-04b0-46aa-81c4-3dc10671198f",
          "timestamp": 1750794148488,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a227839-1afa-4093-a758-775891efdece",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1382be16-30dc-475c-a316-2c19c0ea9f80",
          "httpRequestId": "5220d732-9183-423a-a2f7-4d43aa578ee3",
          "scriptId": "0a227839-1afa-4093-a758-775891efdece",
          "execution": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "e3bd6eda1cb0422bfce43f4050ef2d89",
          "id": "562ee130-9ae5-498f-92b9-3b23e462a2c0",
          "timestamp": 1750794148514,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
          "name": "Blog Generation Stats",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "2cbebf0a-612f-4d01-b3a7-e8fa6307431b",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5623502c-4315-46da-ac2a-bd8a4fac077c",
          "scriptId": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
          "execution": "ab1da29e-796e-46f9-86b3-1e9e58579415"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "db345bae1da7f87b06b208d45b767f17",
          "id": "f5b5ddc3-8039-4a30-8de3-4a2acb0ff314",
          "timestamp": 1750794148514,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
          "name": "Blog Generation Stats",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "2cbebf0a-612f-4d01-b3a7-e8fa6307431b",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5623502c-4315-46da-ac2a-bd8a4fac077c",
          "scriptId": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
          "execution": "ab1da29e-796e-46f9-86b3-1e9e58579415"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "195341be17196c94d1afd7f73cce9151",
          "id": "9cecc269-d7a3-48fd-a25c-ec6000d657ed",
          "timestamp": 1750794148543,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "bc52447e-688b-449d-ba93-4884fcae9027",
          "name": "Generate Blog From Prompt",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-from-prompt"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e1627bce-fb2a-4c8c-a30c-3ef641152175",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "41eff93c-ce79-4359-8c39-cd0386a84493",
          "scriptId": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
          "execution": "788b3460-0afc-4869-9ba3-9488e75e9f35"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "c00eed42aa8b5f96244123e8495addc4",
          "id": "92be7e69-1958-465f-a36b-c7d317372cd8",
          "timestamp": 1750794148543,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "bc52447e-688b-449d-ba93-4884fcae9027",
          "name": "Generate Blog From Prompt",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-from-prompt"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e1627bce-fb2a-4c8c-a30c-3ef641152175",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "41eff93c-ce79-4359-8c39-cd0386a84493",
          "scriptId": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
          "execution": "788b3460-0afc-4869-9ba3-9488e75e9f35"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Data payload exists",
          "message": "expected undefined to exist",
          "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:3)",
          "checksum": "bb6bdbce25bc2ed9434aa989b35e130a",
          "id": "aeef1b18-f808-4575-a62c-505a8c54f2c2",
          "timestamp": 1750794148544,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "bc52447e-688b-449d-ba93-4884fcae9027",
          "name": "Generate Blog From Prompt",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-from-prompt"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e1627bce-fb2a-4c8c-a30c-3ef641152175",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "41eff93c-ce79-4359-8c39-cd0386a84493",
          "scriptId": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
          "execution": "788b3460-0afc-4869-9ba3-9488e75e9f35"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "0c350660899225a8fa110255bb972775",
          "id": "bd85a298-d088-4377-a5a7-de53426dae79",
          "timestamp": 1750794148562,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
          "name": "Generate Blog Content",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-content"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "acba70e0-a88f-4535-9ba0-566577eca7bf",
          "length": 11,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9f8968d-3697-49a2-9c04-20613f84b060",
          "scriptId": "b523e797-8ec5-4582-a17c-8a6acee1952f",
          "execution": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "adff56b51bca4051b34d6717738b0ed6",
          "id": "5363fdf8-078e-4c7b-bee3-e3e168c06701",
          "timestamp": 1750794148563,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
          "name": "Generate Blog Content",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-content"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "acba70e0-a88f-4535-9ba0-566577eca7bf",
          "length": 11,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9f8968d-3697-49a2-9c04-20613f84b060",
          "scriptId": "b523e797-8ec5-4582-a17c-8a6acee1952f",
          "execution": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Generated content exists",
          "message": "expected undefined to exist",
          "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:4)",
          "checksum": "f52c972ae68fd8ef9b81848b9c6ecb96",
          "id": "6a04ac5e-a506-4c3c-96d3-182705e535a7",
          "timestamp": 1750794148564,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
          "name": "Generate Blog Content",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "generate-content"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                ],
                "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "acba70e0-a88f-4535-9ba0-566577eca7bf",
          "length": 11,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9f8968d-3697-49a2-9c04-20613f84b060",
          "scriptId": "b523e797-8ec5-4582-a17c-8a6acee1952f",
          "execution": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "8a4882d3a4f402892b197ec6da8e9bb6",
          "id": "80e09a2e-55dd-44cf-9927-d31b9f6b86b8",
          "timestamp": 1750794148581,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
          "name": "Blog Suggestions",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "suggestions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"AI in Education\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                ],
                "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b982b286-0957-47a1-8a27-09b84b9e13e9",
          "length": 11,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8fb5cabb-c3a4-48df-915e-0565e762ee0d",
          "scriptId": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
          "execution": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "ad23e2dc9bc41b1f432bfa3e5e712bc5",
          "id": "0d015104-5e88-40c9-a039-107ff4c7b715",
          "timestamp": 1750794148582,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
          "name": "Blog Suggestions",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "suggestions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"AI in Education\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                ],
                "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b982b286-0957-47a1-8a27-09b84b9e13e9",
          "length": 11,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8fb5cabb-c3a4-48df-915e-0565e762ee0d",
          "scriptId": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
          "execution": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Suggestions list is array",
          "message": "expected undefined to be an array",
          "stack": "AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:5)",
          "checksum": "6d5838e7cba15aaf2e7e97d332908a01",
          "id": "757e81d4-1608-4c05-af4c-d3d9f0fb8c42",
          "timestamp": 1750794148582,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
          "name": "Blog Suggestions",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "suggestions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"AI in Education\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                  "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                ],
                "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b982b286-0957-47a1-8a27-09b84b9e13e9",
          "length": 11,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8fb5cabb-c3a4-48df-915e-0565e762ee0d",
          "scriptId": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
          "execution": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "a280758057fce38f11f64aa616522bd1",
          "id": "fad49003-386b-4a8e-9d1f-9d06af0e2dd1",
          "timestamp": 1750794148599,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
          "name": "Enhance Existing Blog",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "enhance"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "dc1633b0-311b-4a28-8c12-8a85bfd1420b",
          "length": 11,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e42f536b-e277-4046-ae63-d26dffa4e2ee",
          "scriptId": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
          "execution": "95995b85-a96b-45ca-93c0-4831c07ac18d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "a211186175dac2e885fee6a7c5d28500",
          "id": "5752ee88-234b-4fb2-9675-d0ffe426d759",
          "timestamp": 1750794148599,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
          "name": "Enhance Existing Blog",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "enhance"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "dc1633b0-311b-4a28-8c12-8a85bfd1420b",
          "length": 11,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e42f536b-e277-4046-ae63-d26dffa4e2ee",
          "scriptId": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
          "execution": "95995b85-a96b-45ca-93c0-4831c07ac18d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "e4038d2710c70f326817de976e589354",
          "id": "e0567ef2-8701-4b42-97a6-a6a042d21232",
          "timestamp": 1750794148617,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
          "name": "Meta Description",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "meta-description"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ffe1ce71-a6e6-4e55-8d8a-91d69855a22e",
          "length": 11,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa4e6f49-410e-43cd-b236-2a215bdaa278",
          "scriptId": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
          "execution": "cb60e56c-cbaa-41b4-8801-fa639611a752"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:7)",
          "checksum": "f7aece5bec02507cbc6defe173606ac4",
          "id": "20e8774a-8440-4f4e-b342-b6fe470c7350",
          "timestamp": 1750794148617,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
          "name": "Meta Description",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "meta-description"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ffe1ce71-a6e6-4e55-8d8a-91d69855a22e",
          "length": 11,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa4e6f49-410e-43cd-b236-2a215bdaa278",
          "scriptId": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
          "execution": "cb60e56c-cbaa-41b4-8801-fa639611a752"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "5ba62a4798f640457ce8ad240d284f02",
          "id": "e0cbccca-3291-4f59-96ec-fcd927bfbfcc",
          "timestamp": 1750794148635,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
          "name": "Generate Tags",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "tags"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f1cbcddc-b00f-4919-8dc8-2226c9c3883b",
          "length": 11,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c58be006-7413-4198-8978-40ca2c41f360",
          "scriptId": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
          "execution": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:8)",
          "checksum": "5c50f56eafe55ea8507e77f2a125cb29",
          "id": "f2d1e224-cf90-4d28-b0b6-a00880784e7e",
          "timestamp": 1750794148635,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
          "name": "Generate Tags",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "blog",
                "tags"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f1cbcddc-b00f-4919-8dc8-2226c9c3883b",
          "length": 11,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c58be006-7413-4198-8978-40ca2c41f360",
          "scriptId": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
          "execution": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "860972b3220359b08f731bfd367c8d1c",
          "id": "29a7b856-896c-4dbb-94d6-2ec359ca65d1",
          "timestamp": 1750794148658,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "aa019a72-07b8-4c05-a844-41b432418224",
          "name": "Legacy Content Enhance",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "enhance"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d164010e-4e40-4976-90c8-96fdbdc22c15",
          "length": 11,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "65f1c995-8a39-4ee5-b341-1178aabe2965",
          "scriptId": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
          "execution": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "65ef9d29054015c8d6033ac8f76a2301",
          "id": "ae8373c7-5e75-4310-a80c-0a49a90218dd",
          "timestamp": 1750794148659,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "aa019a72-07b8-4c05-a844-41b432418224",
          "name": "Legacy Content Enhance",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "enhance"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d164010e-4e40-4976-90c8-96fdbdc22c15",
          "length": 11,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "65f1c995-8a39-4ee5-b341-1178aabe2965",
          "scriptId": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
          "execution": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "51f62f97358e839673dfe407246b1342",
          "id": "e6f572e9-6078-4e2d-838c-51fabcb462ec",
          "timestamp": 1750794148680,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
          "name": "Legacy Content Suggestions",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "suggestions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e56c2694-d2bc-4da1-89b3-d3e8e837dc4a",
          "length": 11,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f9fa84e-cec2-4d91-b8c0-9c8f6f1076c6",
          "scriptId": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
          "execution": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "d6a5c24f21dc12c72f9dbf91b98e20b4",
          "id": "b5d1cd9c-22eb-49ed-9d0f-af81dbd44660",
          "timestamp": 1750794148680,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
          "name": "Legacy Content Suggestions",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "suggestions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e56c2694-d2bc-4da1-89b3-d3e8e837dc4a",
          "length": 11,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f9fa84e-cec2-4d91-b8c0-9c8f6f1076c6",
          "scriptId": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
          "execution": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "8d3dd5545e58f581c4635dfe9af03c35",
          "id": "fd4d9c29-e562-4921-8fe7-8ba2cbde57e3",
          "timestamp": 1750794148696,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
          "name": "Legacy Content Meta Description",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "meta-description"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "14c8c109-f42d-45f8-b253-b0068b76e0ac",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c90054b6-7537-4af5-ba67-49549187b3d2",
          "scriptId": "82bf5764-44e8-4ebb-be26-185db375fb00",
          "execution": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "fb2fea6c11cdf60d9eea63f6932956b2",
          "id": "58fb8ae1-c7e7-4401-850d-ca278b78b0fe",
          "timestamp": 1750794148696,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
          "name": "Legacy Content Meta Description",
          "request": {
            "url": {
              "path": [
                "api",
                "ai",
                "content",
                "meta-description"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                ],
                "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "a030bbed-b2e9-45c5-9d9b-85b0f472fa79",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a227839-1afa-4093-a758-775891efdece",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "9d482eb0-7baf-438c-a3a9-bf920fbf0e70"
                  }
                }
              ]
            },
            {
              "id": "192987fc-6a22-423a-804d-fc700f13a6a8",
              "name": "Blog Generation Stats",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a21aa67a-b2a4-4b45-a203-2d559d1a9e3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "ab1da29e-796e-46f9-86b3-1e9e58579415"
                  }
                }
              ]
            },
            {
              "id": "bc52447e-688b-449d-ba93-4884fcae9027",
              "name": "Generate Blog From Prompt",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-from-prompt"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"Test blog generation via Postman\",\n  \"approach\": \"professional\",\n  \"saveToDatabase\": false\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f8fc1e4a-d8cd-4791-afca-d83c3628e9c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Data payload exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "788b3460-0afc-4869-9ba3-9488e75e9f35"
                  }
                }
              ]
            },
            {
              "id": "c58d1bec-5705-49ca-ab48-ee8883cd2fd1",
              "name": "Generate Blog Content",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "generate-content"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Content Generation Test\",\n  \"description\": \"Testing generate-content endpoint\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b523e797-8ec5-4582-a17c-8a6acee1952f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Generated content exists\", () => { const json = pm.response.json(); pm.expect(json.data).to.exist; });"
                    ],
                    "_lastExecutionId": "0f6c53e6-ec3c-41ba-ad4a-ea37540e4273"
                  }
                }
              ]
            },
            {
              "id": "6fa94fc5-183b-4918-a1e3-f571d938d59a",
              "name": "Blog Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"AI in Education\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8723c3b0-c472-40d0-85ef-fe8d89b98b59",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });",
                      "pm.test(\"Suggestions list is array\", () => { const json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
                    ],
                    "_lastExecutionId": "5174e24c-52a5-4fc1-b6f3-5d184ca49027"
                  }
                }
              ]
            },
            {
              "id": "a42ce328-50ba-441d-8b6b-cad0feb0cfc8",
              "name": "Enhance Existing Blog",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"blogId\": \"dummy-id\",\n  \"enhancementType\": \"improve\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fad90f87-e2ff-4f2a-89a0-2e7878b9198b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "95995b85-a96b-45ca-93c0-4831c07ac18d"
                  }
                }
              ]
            },
            {
              "id": "c185b3ba-03e3-4493-a192-668d247c01fc",
              "name": "Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Meta Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e729beeb-b5e4-4d7e-ac03-b225b365a922",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "cb60e56c-cbaa-41b4-8801-fa639611a752"
                  }
                }
              ]
            },
            {
              "id": "c0652a5f-652a-4cca-83dc-056c71b3085d",
              "name": "Generate Tags",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "blog",
                    "tags"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Postman Tag Test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2bbdeb61-590b-4b2b-b2ed-7f3bc6322b43",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "84a9e0f7-78a2-4f8a-b945-6898cb5b5a1e"
                  }
                }
              ]
            },
            {
              "id": "aa019a72-07b8-4c05-a844-41b432418224",
              "name": "Legacy Content Enhance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "enhance"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Test legacy enhance\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b67cdab8-4245-4294-b6ed-52ae17f0804b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "39162be5-b9cd-4caf-bbb9-c1c15a48f49c"
                  }
                }
              ]
            },
            {
              "id": "3c6a40f3-8c15-488b-a20c-57f99e257fbb",
              "name": "Legacy Content Suggestions",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "suggestions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"topic\": \"Legacy suggestion test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d398bbf-58b0-4667-bb9b-fef364d577b6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "2a86cf56-ab2f-44ba-b432-bf2082a9ad39"
                  }
                }
              ]
            },
            {
              "id": "ab8fc442-e638-4bdc-bab9-465951a15e99",
              "name": "Legacy Content Meta Description",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "ai",
                    "content",
                    "meta-description"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Legacy meta test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "82bf5764-44e8-4ebb-be26-185db375fb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => { const json = pm.response.json(); pm.expect(json.success).to.be.true; });"
                    ],
                    "_lastExecutionId": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:8080/api/v1",
              "key": "base_url"
            },
            {
              "type": "string",
              "value": "your_auth_token_here",
              "key": "auth_token"
            }
          ],
          "info": {
            "_postman_id": "74a4abd4-9016-4e8b-b40c-c03ad2fe7fb5",
            "name": "Medh AI API",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Postman collection for testing Medh AI API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "14c8c109-f42d-45f8-b253-b0068b76e0ac",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c90054b6-7537-4af5-ba67-49549187b3d2",
          "scriptId": "82bf5764-44e8-4ebb-be26-185db375fb00",
          "execution": "e19869b9-9fc4-4187-b1df-d2438a2d21e2"
        }
      }
    ],
    "error": null
  }
}