{
  "collection": {
    "item": [
      {
        "id": "a11faac0-b4c0-4b84-bf97-80ace147903d",
        "name": "Authentication",
        "item": [
          {
            "id": "bb1a7ce4-3deb-4a21-ade3-e8a2eaaacd14",
            "name": "Parent Login",
            "request": {
              "url": {
                "path": [
                  "auth",
                  "login"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"email\": \"parent@medh.co\",\n  \"password\": \"Parent@123\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "20d47cdb-5a5e-4824-b234-ce04d0fe6057",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response has token\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "    pm.expect(json.data.token).to.exist;",
                    "    pm.collectionVariables.set('parent_token', json.data.token);",
                    "    pm.globals.set('parent_token', json.data.token);",
                    "});"
                  ],
                  "_lastExecutionId": "0f1ba72d-cfb4-4451-929a-33049a30a450"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "71d433d0-8ab6-432b-82a7-8b5f088f0391",
        "name": "Parent Dashboard",
        "item": [
          {
            "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
            "name": "Get Parent Profile",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "dashboard",
                  "profile"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});",
                    "pm.test(\"Parent profile exists\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data.parent).to.exist;",
                    "    pm.expect(json.data.parent.id).to.exist;",
                    "});",
                    "pm.test(\"Children array exists\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data.children).to.be.an('array');",
                    "});"
                  ],
                  "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
                }
              }
            ]
          },
          {
            "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
            "name": "Get Upcoming Classes",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "dashboard",
                  "classes",
                  "upcoming"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});",
                    "pm.test(\"Classes data exists\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
                }
              }
            ]
          },
          {
            "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
            "name": "Get Child Progress",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "dashboard",
                  "progress",
                  "{{child_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});",
                    "pm.test(\"Progress data exists\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
                }
              }
            ]
          },
          {
            "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
            "name": "Get Child Attendance",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "dashboard",
                  "attendance",
                  "{{child_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});",
                    "pm.test(\"Attendance data exists\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1e09af8-4662-485a-96b8-4d31d424d041",
        "name": "Parent Management",
        "item": [
          {
            "id": "55454a2b-f4e8-4604-9e19-09880bc2c7d2",
            "name": "Get Parent Children",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "children"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4c2fd370-5fd8-4564-9105-b0b8837e56a6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});",
                    "pm.test(\"Children list is array\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data).to.be.an('array');",
                    "});",
                    "pm.test(\"Set child_id for further tests\", () => {",
                    "    const json = pm.response.json();",
                    "    if (json.data && json.data.children && json.data.children.length > 0) {",
                    "        pm.collectionVariables.set('child_id', json.data.children[0].child.id);",
                    "    }",
                    "});"
                  ],
                  "_lastExecutionId": "529911cd-566f-4327-ac49-71efc70a0616"
                }
              }
            ]
          },
          {
            "id": "da0dd567-dc2f-4bab-92d3-3a90a1ac4053",
            "name": "Link Parent to Child",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "link-child"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"childId\": \"{{child_id}}\",\n  \"relationship\": \"parent\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "761a3a6a-c3f7-4da7-af29-6088cf9ed43b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", () => {",
                    "    pm.expect([200, 201]).to.include(pm.response.code);",
                    "});",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});",
                    "pm.test(\"Link data exists\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "49fb6397-cfe9-403e-b2d3-cf3e1ad84bbb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e6cc6585-5d4f-4778-be36-6920a0f948b6",
        "name": "Parent Notifications",
        "item": [
          {
            "id": "90050350-aec9-4750-a58d-2c9824b44d54",
            "name": "Get Parent Notifications",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "notifications"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d176a71a-39a5-4308-ab58-32f96a2d443e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});",
                    "pm.test(\"Notifications data exists\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.data).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "acb0ea4a-559e-4f7f-869c-c73b61b79818"
                }
              }
            ]
          },
          {
            "id": "fd0aa7b6-047d-4bda-9d9e-7e0f780de1db",
            "name": "Mark Notification as Read",
            "request": {
              "url": {
                "path": [
                  "parent",
                  "notifications",
                  "{{notification_id}}",
                  "read"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{parent_token}}"
                }
              ],
              "method": "PUT"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bb62d314-64d4-4a96-bfb8-1a63c04a4dbc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                    "pm.test(\"Response success is true\", () => {",
                    "    const json = pm.response.json();",
                    "    pm.expect(json.success).to.be.true;",
                    "});"
                  ],
                  "_lastExecutionId": "3c84cdee-7532-4770-97ed-ad51b37d2ff5"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:8080/api/v1",
        "key": "base_url"
      },
      {
        "type": "string",
        "value": "",
        "key": "parent_token"
      },
      {
        "type": "string",
        "value": "",
        "key": "child_id"
      },
      {
        "type": "string",
        "value": "dummy-notification-id",
        "key": "notification_id"
      }
    ],
    "info": {
      "_postman_id": "e4455f19-b29c-47a0-bb6c-2f53f1c2343a",
      "name": "Parent API Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Comprehensive test suite for Parent API endpoints",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "bdf4f0ed-0eb6-449b-8047-96e1021afc6e",
    "values": []
  },
  "globals": {
    "id": "7ee80583-ce19-4970-8fba-cd89944f8fc3",
    "values": [
      {
        "type": "any",
        "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8",
        "key": "parent_token"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 27,
        "pending": 0,
        "failed": 7
      },
      "testScripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.44444444444444,
      "responseMin": 3,
      "responseMax": 459,
      "responseSd": 139.49520988280176,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1750795423405,
      "completed": 1750795424182
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 9,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "53e9d96a-ba35-4a5d-9bd6-db240051cf36",
          "httpRequestId": "f23adfc3-1c37-4266-b72e-b5cdce5d1103"
        },
        "item": {
          "id": "bb1a7ce4-3deb-4a21-ade3-e8a2eaaacd14",
          "name": "Parent Login",
          "request": {
            "url": {
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"parent@medh.co\",\n  \"password\": \"Parent@123\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "20d47cdb-5a5e-4824-b234-ce04d0fe6057",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response has token\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    pm.expect(json.data.token).to.exist;",
                  "    pm.collectionVariables.set('parent_token', json.data.token);",
                  "    pm.globals.set('parent_token', json.data.token);",
                  "});"
                ],
                "_lastExecutionId": "0f1ba72d-cfb4-4451-929a-33049a30a450"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cfc715a0-8c2f-499e-8a89-f736703c6a18",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "59",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"parent@medh.co\",\n  \"password\": \"Parent@123\"\n}"
          }
        },
        "response": {
          "id": "ca683812-3dd1-476d-8d21-ca8dd9f22544",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "RateLimit-Policy",
              "value": "100;w=900"
            },
            {
              "key": "RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "RateLimit-Reset",
              "value": "900"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "ETag",
              "value": "W/\"5af-aMfam5zFhdi13ITwyM2qxge7P7Q\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:43 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              76,
              111,
              103,
              105,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              48,
              49,
              101,
              102,
              99,
              56,
              56,
              99,
              52,
              49,
              51,
              101,
              48,
              52,
              52,
              50,
              98,
              102,
              49,
              52,
              99,
              50,
              34,
              44,
              34,
              102,
              117,
              108,
              108,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              101,
              110,
              116,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              64,
              109,
              101,
              100,
              104,
              46,
              99,
              111,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              91,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              34,
              93,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              109,
              97,
              103,
              101,
              34,
              58,
              123,
              34,
              117,
              112,
              108,
              111,
              97,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              50,
              58,
              51,
              55,
              46,
              57,
              55,
              57,
              90,
              34,
              125,
              44,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              102,
              114,
              101,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              95,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              105,
              111,
              110,
              34,
              58,
              51,
              50,
              44,
              34,
              105,
              115,
              95,
              111,
              110,
              108,
              105,
              110,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              115,
              101,
              101,
              110,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              51,
              58,
              52,
              51,
              46,
              54,
              54,
              54,
              90,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              34,
              58,
              123,
              34,
              108,
              101,
              97,
              114,
              110,
              105,
              110,
              103,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              99,
              111,
              117,
              114,
              115,
              101,
              115,
              95,
              101,
              110,
              114,
              111,
              108,
              108,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              99,
              111,
              117,
              114,
              115,
              101,
              115,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              108,
              101,
              97,
              114,
              110,
              105,
              110,
              103,
              95,
              116,
              105,
              109,
              101,
              34,
              58,
              48,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              114,
              101,
              97,
              107,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              110,
              103,
              101,
              115,
              116,
              95,
              115,
              116,
              114,
              101,
              97,
              107,
              34,
              58,
              48,
              44,
              34,
              99,
              101,
              114,
              116,
              105,
              102,
              105,
              99,
              97,
              116,
              101,
              115,
              95,
              101,
              97,
              114,
              110,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              115,
              107,
              105,
              108,
              108,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              97,
              99,
              104,
              105,
              101,
              118,
              101,
              109,
              101,
              110,
              116,
              115,
              95,
              117,
              110,
              108,
              111,
              99,
              107,
              101,
              100,
              34,
              58,
              48,
              125,
              44,
              34,
              101,
              110,
              103,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              108,
              111,
              103,
              105,
              110,
              115,
              34,
              58,
              54,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              95,
              116,
              105,
              109,
              101,
              34,
              58,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              48,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              51,
              58,
              52,
              51,
              46,
              55,
              48,
              56,
              90,
              34,
              44,
              34,
              99,
              111,
              110,
              115,
              101,
              99,
              117,
              116,
              105,
              118,
              101,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              95,
              100,
              97,
              121,
              115,
              34,
              58,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              95,
              118,
              105,
              101,
              119,
              115,
              34,
              58,
              48,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              95,
              117,
              115,
              97,
              103,
              101,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              125,
              44,
              34,
              115,
              111,
              99,
              105,
              97,
              108,
              34,
              58,
              123,
              34,
              114,
              101,
              118,
              105,
              101,
              119,
              115,
              95,
              119,
              114,
              105,
              116,
              116,
              101,
              110,
              34,
              58,
              48,
              44,
              34,
              100,
              105,
              115,
              99,
              117,
              115,
              115,
              105,
              111,
              110,
              115,
              95,
              112,
              97,
              114,
              116,
              105,
              99,
              105,
              112,
              97,
              116,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              95,
              115,
              104,
              97,
              114,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              102,
              111,
              108,
              108,
              111,
              119,
              101,
              114,
              115,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              44,
              34,
              102,
              111,
              108,
              108,
              111,
              119,
              105,
              110,
              103,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              44,
              34,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              116,
              121,
              95,
              114,
              101,
              112,
              117,
              116,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              48,
              125,
              44,
              34,
              102,
              105,
              110,
              97,
              110,
              99,
              105,
              97,
              108,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              115,
              112,
              101,
              110,
              116,
              34,
              58,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              99,
              111,
              117,
              114,
              115,
              101,
              115,
              95,
              112,
              117,
              114,
              99,
              104,
              97,
              115,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              115,
              117,
              98,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              95,
              109,
              111,
              110,
              116,
              104,
              115,
              34,
              58,
              48,
              44,
              34,
              114,
              101,
              102,
              117,
              110,
              100,
              115,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              108,
              105,
              102,
              101,
              116,
              105,
              109,
              101,
              95,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              48,
              125,
              44,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              53,
              98,
              48,
              52,
              53,
              101,
              57,
              49,
              48,
              98,
              99,
              102,
              54,
              52,
              102,
              55,
              48,
              54,
              97,
              51,
              102,
              51,
              34,
              125,
              125,
              44,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              49,
              99,
              50,
              86,
              121,
              83,
              87,
              81,
              105,
              79,
              105,
              73,
              50,
              79,
              68,
              65,
              120,
              90,
              87,
              90,
              106,
              79,
              68,
              104,
              106,
              78,
              68,
              69,
              122,
              90,
              84,
              65,
              48,
              78,
              68,
              74,
              105,
              90,
              106,
              69,
              48,
              89,
              122,
              73,
              105,
              76,
              67,
              74,
              112,
              90,
              67,
              73,
              54,
              73,
              106,
              89,
              52,
              77,
              68,
              70,
              108,
              90,
              109,
              77,
              52,
              79,
              71,
              77,
              48,
              77,
              84,
              78,
              108,
              77,
              68,
              81,
              48,
              77,
              109,
              74,
              109,
              77,
              84,
              82,
              106,
              77,
              105,
              73,
              115,
              73,
              109,
              86,
              116,
              89,
              87,
              108,
              115,
              73,
              106,
              111,
              105,
              99,
              71,
              70,
              121,
              90,
              87,
              53,
              48,
              81,
              71,
              49,
              108,
              90,
              71,
              103,
              117,
              89,
              50,
              56,
              105,
              76,
              67,
              74,
              121,
              98,
              50,
              120,
              108,
              73,
              106,
              111,
              105,
              89,
              87,
              82,
              116,
              97,
              87,
              52,
              105,
              76,
              67,
              74,
              48,
              101,
              88,
              66,
              108,
              73,
              106,
              111,
              105,
              89,
              87,
              78,
              106,
              90,
              88,
              78,
              122,
              73,
              105,
              119,
              105,
              97,
              87,
              70,
              48,
              73,
              106,
              111,
              120,
              78,
              122,
              85,
              119,
              78,
              122,
              107,
              49,
              78,
              68,
              73,
              122,
              76,
              67,
              74,
              108,
              101,
              72,
              65,
              105,
              79,
              106,
              69,
              51,
              78,
              84,
              65,
              52,
              79,
              68,
              69,
              52,
              77,
              106,
              78,
              57,
              46,
              95,
              106,
              99,
              105,
              85,
              97,
              66,
              70,
              101,
              122,
              119,
              65,
              100,
              105,
              73,
              86,
              55,
              51,
              107,
              112,
              54,
              80,
              82,
              111,
              120,
              111,
              75,
              67,
              82,
              114,
              81,
              83,
              72,
              53,
              113,
              68,
              88,
              68,
              116,
              100,
              55,
              108,
              56,
              34,
              44,
              34,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              95,
              105,
              100,
              34,
              58,
              34,
              57,
              54,
              56,
              55,
              101,
              57,
              52,
              49,
              99,
              102,
              100,
              101,
              54,
              101,
              102,
              49,
              48,
              57,
              53,
              51,
              100,
              55,
              49,
              98,
              51,
              52,
              99,
              51,
              102,
              100,
              101,
              57,
              54,
              54,
              101,
              50,
              97,
              50,
              54,
              99,
              101,
              101,
              50,
              98,
              52,
              98,
              49,
              54,
              56,
              54,
              55,
              49,
              99,
              102,
              53,
              48,
              52,
              50,
              49,
              55,
              99,
              102,
              101,
              101,
              34,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              115,
              95,
              105,
              110,
              34,
              58,
              34,
              50,
              52,
              104,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 459,
          "responseSize": 1455
        },
        "id": "bb1a7ce4-3deb-4a21-ade3-e8a2eaaacd14",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has token",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "320814f1-5fc8-42c1-8836-4962152f2f09",
          "length": 9,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4a04f653-d8e1-4802-9aa1-337445fb0e43"
        },
        "item": {
          "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
          "name": "Get Parent Profile",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "profile"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Parent profile exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.parent).to.exist;",
                  "    pm.expect(json.data.parent.id).to.exist;",
                  "});",
                  "pm.test(\"Children array exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.children).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "dashboard",
              "profile"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d5f2e99a-ac82-4b42-a2c6-8e808515661d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f094e4de-36b0-479f-a19c-6a8ef228546e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "662"
            },
            {
              "key": "ETag",
              "value": "W/\"296-0ywnZG+g2WQyuEveuGfkIGHJS8c\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:43 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              101,
              110,
              116,
              32,
              100,
              97,
              115,
              104,
              98,
              111,
              97,
              114,
              100,
              32,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              48,
              49,
              101,
              102,
              99,
              56,
              56,
              99,
              52,
              49,
              51,
              101,
              48,
              52,
              52,
              50,
              98,
              102,
              49,
              52,
              99,
              50,
              34,
              44,
              34,
              102,
              117,
              108,
              108,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              101,
              110,
              116,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              64,
              109,
              101,
              100,
              104,
              46,
              99,
              111,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              95,
              110,
              117,
              109,
              98,
              101,
              114,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              73,
              78,
              34,
              44,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              34,
              43,
              57,
              49,
              55,
              55,
              49,
              48,
              56,
              52,
              48,
              54,
              57,
              54,
              34,
              125,
              93,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              109,
              97,
              103,
              101,
              34,
              58,
              123,
              34,
              117,
              112,
              108,
              111,
              97,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              50,
              58,
              51,
              55,
              46,
              57,
              55,
              57,
              90,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              109,
              101,
              109,
              98,
              101,
              114,
              95,
              115,
              105,
              110,
              99,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              50,
              58,
              51,
              55,
              46,
              57,
              55,
              57,
              90,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              108,
              111,
              103,
              105,
              110,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              51,
              58,
              52,
              51,
              46,
              55,
              48,
              56,
              90,
              34,
              125,
              44,
              34,
              99,
              104,
              105,
              108,
              100,
              114,
              101,
              110,
              34,
              58,
              91,
              93,
              44,
              34,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              99,
              104,
              105,
              108,
              100,
              114,
              101,
              110,
              34,
              58,
              48,
              44,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              95,
              99,
              104,
              105,
              108,
              100,
              114,
              101,
              110,
              34,
              58,
              48,
              44,
              34,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              34,
              58,
              123,
              34,
              99,
              97,
              110,
              95,
              118,
              105,
              101,
              119,
              95,
              103,
              114,
              97,
              100,
              101,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              118,
              105,
              101,
              119,
              95,
              97,
              116,
              116,
              101,
              110,
              100,
              97,
              110,
              99,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              118,
              105,
              101,
              119,
              95,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              99,
              97,
              116,
              101,
              95,
              119,
              105,
              116,
              104,
              95,
              105,
              110,
              115,
              116,
              114,
              117,
              99,
              116,
              111,
              114,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              115,
              99,
              104,
              101,
              100,
              117,
              108,
              101,
              95,
              109,
              101,
              101,
              116,
              105,
              110,
              103,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              109,
              97,
              107,
              101,
              95,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125,
              125,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 75,
          "responseSize": 662
        },
        "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response success is true",
            "skipped": false
          },
          {
            "assertion": "Parent profile exists",
            "skipped": false
          },
          {
            "assertion": "Children array exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b2b94b07-1759-4420-9769-33306b085463",
          "length": 9,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5ea771bf-15ba-4657-8ca9-5ebee13cb103"
        },
        "item": {
          "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
          "name": "Get Upcoming Classes",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "classes",
                "upcoming"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Classes data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "dashboard",
              "classes",
              "upcoming"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7540dc20-864e-4a57-a11d-c660f2053003",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "ef0a64bd-4985-4d56-a48d-0226eac40556",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "147"
            },
            {
              "key": "ETag",
              "value": "W/\"93-HyE5ElIhZx/LHeDlSny3kMe4GQ8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:44 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              112,
              99,
              111,
              109,
              105,
              110,
              103,
              32,
              99,
              108,
              97,
              115,
              115,
              101,
              115,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              108,
              97,
              115,
              115,
              101,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              99,
              108,
              97,
              115,
              115,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              99,
              104,
              105,
              108,
              100,
              114,
              101,
              110,
              95,
              119,
              105,
              116,
              104,
              95,
              99,
              108,
              97,
              115,
              115,
              101,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 30,
          "responseSize": 147
        },
        "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response success is true",
            "skipped": false
          },
          {
            "assertion": "Classes data exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7ac39be6-95a9-4987-a03b-b845e6d54fcd",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de997033-9c53-4d43-8f75-33bc43041672"
        },
        "item": {
          "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
          "name": "Get Child Progress",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "progress",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Progress data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "dashboard",
              "progress",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fc0a3f59-c71e-47ad-8b92-6bc1b84360d0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "19cdd986-9631-4d3a-bc48-62e5b7f87e52",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:44 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 27
        },
        "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:4)"
            }
          },
          {
            "assertion": "Progress data exists",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Progress data exists",
              "message": "expected undefined to exist",
              "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f000a7e0-0572-4d31-ae7f-1d7a1f5ae716",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fae3b04f-7699-4f3d-8e4b-7b6ab14a933e"
        },
        "item": {
          "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
          "name": "Get Child Attendance",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "attendance",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Attendance data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "dashboard",
              "attendance",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5ea71cd2-cedb-445c-8cfb-b663df8fcc04",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "cb98cb6b-a479-4f66-95ca-a6c897b42fd4",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-a71aWvZbrvFa1RUOjb0hvkmPRJ0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:44 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 27
        },
        "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response success is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response success is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:5)"
            }
          },
          {
            "assertion": "Attendance data exists",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Attendance data exists",
              "message": "expected undefined to exist",
              "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5adfb04f-e84c-4c7d-8a76-7c345a9514fa",
          "length": 9,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a04ec462-a465-438d-a3cb-546692eede22"
        },
        "item": {
          "id": "55454a2b-f4e8-4604-9e19-09880bc2c7d2",
          "name": "Get Parent Children",
          "request": {
            "url": {
              "path": [
                "parent",
                "children"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c2fd370-5fd8-4564-9105-b0b8837e56a6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Children list is array\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.be.an('array');",
                  "});",
                  "pm.test(\"Set child_id for further tests\", () => {",
                  "    const json = pm.response.json();",
                  "    if (json.data && json.data.children && json.data.children.length > 0) {",
                  "        pm.collectionVariables.set('child_id', json.data.children[0].child.id);",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "529911cd-566f-4327-ac49-71efc70a0616"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "children"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ec770c26-0124-4bb4-9aca-5d9dc85362cf",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f8b7665a-3b11-4943-a40b-0ff2b4d4bba8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "662"
            },
            {
              "key": "ETag",
              "value": "W/\"296-0ywnZG+g2WQyuEveuGfkIGHJS8c\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:44 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              101,
              110,
              116,
              32,
              100,
              97,
              115,
              104,
              98,
              111,
              97,
              114,
              100,
              32,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              48,
              49,
              101,
              102,
              99,
              56,
              56,
              99,
              52,
              49,
              51,
              101,
              48,
              52,
              52,
              50,
              98,
              102,
              49,
              52,
              99,
              50,
              34,
              44,
              34,
              102,
              117,
              108,
              108,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              101,
              110,
              116,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              64,
              109,
              101,
              100,
              104,
              46,
              99,
              111,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              95,
              110,
              117,
              109,
              98,
              101,
              114,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              73,
              78,
              34,
              44,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              34,
              43,
              57,
              49,
              55,
              55,
              49,
              48,
              56,
              52,
              48,
              54,
              57,
              54,
              34,
              125,
              93,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              109,
              97,
              103,
              101,
              34,
              58,
              123,
              34,
              117,
              112,
              108,
              111,
              97,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              50,
              58,
              51,
              55,
              46,
              57,
              55,
              57,
              90,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              109,
              101,
              109,
              98,
              101,
              114,
              95,
              115,
              105,
              110,
              99,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              50,
              58,
              51,
              55,
              46,
              57,
              55,
              57,
              90,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              108,
              111,
              103,
              105,
              110,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              51,
              58,
              52,
              51,
              46,
              55,
              48,
              56,
              90,
              34,
              125,
              44,
              34,
              99,
              104,
              105,
              108,
              100,
              114,
              101,
              110,
              34,
              58,
              91,
              93,
              44,
              34,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              99,
              104,
              105,
              108,
              100,
              114,
              101,
              110,
              34,
              58,
              48,
              44,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              95,
              99,
              104,
              105,
              108,
              100,
              114,
              101,
              110,
              34,
              58,
              48,
              44,
              34,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              34,
              58,
              123,
              34,
              99,
              97,
              110,
              95,
              118,
              105,
              101,
              119,
              95,
              103,
              114,
              97,
              100,
              101,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              118,
              105,
              101,
              119,
              95,
              97,
              116,
              116,
              101,
              110,
              100,
              97,
              110,
              99,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              118,
              105,
              101,
              119,
              95,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              99,
              97,
              116,
              101,
              95,
              119,
              105,
              116,
              104,
              95,
              105,
              110,
              115,
              116,
              114,
              117,
              99,
              116,
              111,
              114,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              115,
              99,
              104,
              101,
              100,
              117,
              108,
              101,
              95,
              109,
              101,
              101,
              116,
              105,
              110,
              103,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              97,
              110,
              95,
              109,
              97,
              107,
              101,
              95,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125,
              125,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 50,
          "responseSize": 662
        },
        "id": "55454a2b-f4e8-4604-9e19-09880bc2c7d2",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response success is true",
            "skipped": false
          },
          {
            "assertion": "Children list is array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Children list is array",
              "message": "expected { Object (parent, children, ...) } to be an array",
              "stack": "AssertionError: expected { Object (parent, children, ...) } to be an array\n   at Object.eval sandbox-script.js:3:6)"
            }
          },
          {
            "assertion": "Set child_id for further tests",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c8402381-4194-4e78-96a9-939ca8d8b9df",
          "length": 9,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "59b3b1c1-0cf7-4fb5-a3cb-0eba1ecde666"
        },
        "item": {
          "id": "da0dd567-dc2f-4bab-92d3-3a90a1ac4053",
          "name": "Link Parent to Child",
          "request": {
            "url": {
              "path": [
                "parent",
                "link-child"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"childId\": \"{{child_id}}\",\n  \"relationship\": \"parent\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "761a3a6a-c3f7-4da7-af29-6088cf9ed43b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", () => {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Link data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "49fb6397-cfe9-403e-b2d3-cf3e1ad84bbb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "link-child"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b9995a7f-c488-4aff-b3f0-23aba497dc95",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "47",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"childId\": \"\",\n  \"relationship\": \"parent\"\n}"
          }
        },
        "response": {
          "id": "6e0fd913-caea-4af8-92f6-11b252200a49",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "111"
            },
            {
              "key": "ETag",
              "value": "W/\"6f-GNOw+NQYq9iwervyx2+T8cVl6hw\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:44 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              105,
              108,
              100,
              32,
              108,
              105,
              110,
              107,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              108,
              105,
              110,
              107,
              73,
              100,
              34,
              58,
              34,
              116,
              101,
              109,
              112,
              45,
              108,
              105,
              110,
              107,
              45,
              105,
              100,
              34,
              44,
              34,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 111
        },
        "id": "da0dd567-dc2f-4bab-92d3-3a90a1ac4053",
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false
          },
          {
            "assertion": "Response success is true",
            "skipped": false
          },
          {
            "assertion": "Link data exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "15bfde6a-ae25-455c-9f2f-5838cf71862a",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f14b2c25-30fc-4d12-be9f-a76ecfb88eb4"
        },
        "item": {
          "id": "90050350-aec9-4750-a58d-2c9824b44d54",
          "name": "Get Parent Notifications",
          "request": {
            "url": {
              "path": [
                "parent",
                "notifications"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d176a71a-39a5-4308-ab58-32f96a2d443e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Notifications data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "acb0ea4a-559e-4f7f-869c-c73b61b79818"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "notifications"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "276cb1ae-cdc1-49de-b53d-e9157bc86cc4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1ae1e9bb-5fe7-4c0d-b6dc-734f98398b44",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "110"
            },
            {
              "key": "ETag",
              "value": "W/\"6e-UTyx5iiVdTl51Lj1d9HBqhfIPzU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:44 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              110,
              111,
              116,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              117,
              110,
              114,
              101,
              97,
              100,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 110
        },
        "id": "90050350-aec9-4750-a58d-2c9824b44d54",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response success is true",
            "skipped": false
          },
          {
            "assertion": "Notifications data exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d8958f05-e8c7-4433-90d6-f25f559eaf94",
          "length": 9,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "40e8601b-dae6-433c-811a-a28640996b87"
        },
        "item": {
          "id": "fd0aa7b6-047d-4bda-9d9e-7e0f780de1db",
          "name": "Mark Notification as Read",
          "request": {
            "url": {
              "path": [
                "parent",
                "notifications",
                "{{notification_id}}",
                "read"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "PUT"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bb62d314-64d4-4a96-bfb8-1a63c04a4dbc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "3c84cdee-7532-4770-97ed-ad51b37d2ff5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "parent",
              "notifications",
              "dummy-notification-id",
              "read"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODAxZWZjODhjNDEzZTA0NDJiZjE0YzIiLCJpZCI6IjY4MDFlZmM4OGM0MTNlMDQ0MmJmMTRjMiIsImVtYWlsIjoicGFyZW50QG1lZGguY28iLCJyb2xlIjoiYWRtaW4iLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUwNzk1NDIzLCJleHAiOjE3NTA4ODE4MjN9._jciUaBFezwAdiIV73kp6PRoxoKCRrQSH5qDXDtd7l8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "53bf09fc-1a38-4926-8027-0ce4986b2a93",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "PUT"
        },
        "response": {
          "id": "687f755c-aa58-49ce-b61e-b1481010d8d2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';img-src 'self' data: https:;connect-src 'self' https://api.medh.org;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'self';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "cross-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Permissions-Policy",
              "value": "geolocation=(), camera=(), microphone=()"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "144"
            },
            {
              "key": "ETag",
              "value": "W/\"90-E9zyEYw0VEqclPZpOEMB1xSup0k\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Tue, 24 Jun 2025 20:03:44 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              109,
              97,
              114,
              107,
              101,
              100,
              32,
              97,
              115,
              32,
              114,
              101,
              97,
              100,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              110,
              111,
              116,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              100,
              34,
              58,
              34,
              100,
              117,
              109,
              109,
              121,
              45,
              110,
              111,
              116,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              45,
              105,
              100,
              34,
              44,
              34,
              114,
              101,
              97,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              51,
              58,
              52,
              52,
              46,
              49,
              54,
              57,
              90,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 144
        },
        "id": "fd0aa7b6-047d-4bda-9d9e-7e0f780de1db",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response success is true",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 3345
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "0c350660899225a8fa110255bb972775",
          "id": "c32a49f3-c675-41ba-b4d1-fe62631ad5dc",
          "timestamp": 1750795424044,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
          "name": "Get Child Progress",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "progress",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Progress data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
              }
            }
          ]
        },
        "parent": {
          "id": "71d433d0-8ab6-432b-82a7-8b5f088f0391",
          "name": "Parent Dashboard",
          "item": [
            {
              "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
              "name": "Get Parent Profile",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "profile"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Parent profile exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.parent).to.exist;",
                      "    pm.expect(json.data.parent.id).to.exist;",
                      "});",
                      "pm.test(\"Children array exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.children).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
                  }
                }
              ]
            },
            {
              "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
              "name": "Get Upcoming Classes",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "classes",
                    "upcoming"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Classes data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
                  }
                }
              ]
            },
            {
              "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
              "name": "Get Child Progress",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "progress",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Progress data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
                  }
                }
              ]
            },
            {
              "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
              "name": "Get Child Attendance",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "attendance",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Attendance data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7ac39be6-95a9-4987-a03b-b845e6d54fcd",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de997033-9c53-4d43-8f75-33bc43041672",
          "scriptId": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
          "execution": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "adff56b51bca4051b34d6717738b0ed6",
          "id": "3e594211-1cc9-4b10-8f95-9577894d7998",
          "timestamp": 1750795424046,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
          "name": "Get Child Progress",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "progress",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Progress data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
              }
            }
          ]
        },
        "parent": {
          "id": "71d433d0-8ab6-432b-82a7-8b5f088f0391",
          "name": "Parent Dashboard",
          "item": [
            {
              "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
              "name": "Get Parent Profile",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "profile"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Parent profile exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.parent).to.exist;",
                      "    pm.expect(json.data.parent.id).to.exist;",
                      "});",
                      "pm.test(\"Children array exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.children).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
                  }
                }
              ]
            },
            {
              "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
              "name": "Get Upcoming Classes",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "classes",
                    "upcoming"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Classes data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
                  }
                }
              ]
            },
            {
              "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
              "name": "Get Child Progress",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "progress",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Progress data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
                  }
                }
              ]
            },
            {
              "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
              "name": "Get Child Attendance",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "attendance",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Attendance data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7ac39be6-95a9-4987-a03b-b845e6d54fcd",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de997033-9c53-4d43-8f75-33bc43041672",
          "scriptId": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
          "execution": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Progress data exists",
          "message": "expected undefined to exist",
          "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:4)",
          "checksum": "2fe7ceb7f1c1408b411292d718135522",
          "id": "8a093be0-867e-4875-a8aa-7f82838e9197",
          "timestamp": 1750795424047,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
          "name": "Get Child Progress",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "progress",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Progress data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
              }
            }
          ]
        },
        "parent": {
          "id": "71d433d0-8ab6-432b-82a7-8b5f088f0391",
          "name": "Parent Dashboard",
          "item": [
            {
              "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
              "name": "Get Parent Profile",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "profile"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Parent profile exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.parent).to.exist;",
                      "    pm.expect(json.data.parent.id).to.exist;",
                      "});",
                      "pm.test(\"Children array exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.children).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
                  }
                }
              ]
            },
            {
              "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
              "name": "Get Upcoming Classes",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "classes",
                    "upcoming"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Classes data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
                  }
                }
              ]
            },
            {
              "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
              "name": "Get Child Progress",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "progress",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Progress data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
                  }
                }
              ]
            },
            {
              "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
              "name": "Get Child Attendance",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "attendance",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Attendance data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7ac39be6-95a9-4987-a03b-b845e6d54fcd",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de997033-9c53-4d43-8f75-33bc43041672",
          "scriptId": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
          "execution": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "8a4882d3a4f402892b197ec6da8e9bb6",
          "id": "f8c13272-5688-42af-83c3-470765e59648",
          "timestamp": 1750795424063,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
          "name": "Get Child Attendance",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "attendance",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Attendance data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
              }
            }
          ]
        },
        "parent": {
          "id": "71d433d0-8ab6-432b-82a7-8b5f088f0391",
          "name": "Parent Dashboard",
          "item": [
            {
              "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
              "name": "Get Parent Profile",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "profile"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Parent profile exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.parent).to.exist;",
                      "    pm.expect(json.data.parent.id).to.exist;",
                      "});",
                      "pm.test(\"Children array exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.children).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
                  }
                }
              ]
            },
            {
              "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
              "name": "Get Upcoming Classes",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "classes",
                    "upcoming"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Classes data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
                  }
                }
              ]
            },
            {
              "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
              "name": "Get Child Progress",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "progress",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Progress data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
                  }
                }
              ]
            },
            {
              "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
              "name": "Get Child Attendance",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "attendance",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Attendance data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f000a7e0-0572-4d31-ae7f-1d7a1f5ae716",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fae3b04f-7699-4f3d-8e4b-7b6ab14a933e",
          "scriptId": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
          "execution": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response success is true",
          "message": "expected undefined to be true",
          "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "ad23e2dc9bc41b1f432bfa3e5e712bc5",
          "id": "ee3704f7-7c32-41f9-8bae-dd50247a506b",
          "timestamp": 1750795424063,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
          "name": "Get Child Attendance",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "attendance",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Attendance data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
              }
            }
          ]
        },
        "parent": {
          "id": "71d433d0-8ab6-432b-82a7-8b5f088f0391",
          "name": "Parent Dashboard",
          "item": [
            {
              "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
              "name": "Get Parent Profile",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "profile"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Parent profile exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.parent).to.exist;",
                      "    pm.expect(json.data.parent.id).to.exist;",
                      "});",
                      "pm.test(\"Children array exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.children).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
                  }
                }
              ]
            },
            {
              "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
              "name": "Get Upcoming Classes",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "classes",
                    "upcoming"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Classes data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
                  }
                }
              ]
            },
            {
              "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
              "name": "Get Child Progress",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "progress",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Progress data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
                  }
                }
              ]
            },
            {
              "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
              "name": "Get Child Attendance",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "attendance",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Attendance data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f000a7e0-0572-4d31-ae7f-1d7a1f5ae716",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fae3b04f-7699-4f3d-8e4b-7b6ab14a933e",
          "scriptId": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
          "execution": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Attendance data exists",
          "message": "expected undefined to exist",
          "stack": "AssertionError: expected undefined to exist\n   at Object.eval sandbox-script.js:3:5)",
          "checksum": "09c5f2d6825a2fe84e93e2c4a8fc18e4",
          "id": "2dd2227c-3061-40e3-a6d0-9424a965d5cd",
          "timestamp": 1750795424064,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
          "name": "Get Child Attendance",
          "request": {
            "url": {
              "path": [
                "parent",
                "dashboard",
                "attendance",
                "{{child_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Attendance data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
              }
            }
          ]
        },
        "parent": {
          "id": "71d433d0-8ab6-432b-82a7-8b5f088f0391",
          "name": "Parent Dashboard",
          "item": [
            {
              "id": "c0e55632-aaa1-42d9-b08a-26a8e10b1af5",
              "name": "Get Parent Profile",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "profile"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ceaa133-832c-4954-9c63-cef4db9cc643",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Parent profile exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.parent).to.exist;",
                      "    pm.expect(json.data.parent.id).to.exist;",
                      "});",
                      "pm.test(\"Children array exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data.children).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "e01ab780-6c2e-489e-800d-7c7e97f33108"
                  }
                }
              ]
            },
            {
              "id": "2f1ba67d-880d-4c76-ad70-2b84723135db",
              "name": "Get Upcoming Classes",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "classes",
                    "upcoming"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a38d6601-2f93-436a-92ab-b947c3cd479d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Classes data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "112dac54-eae6-4f2d-bcb5-fbdfb6948e9a"
                  }
                }
              ]
            },
            {
              "id": "ad76fe2e-f5c0-4d83-ba19-9cfa67dc86b0",
              "name": "Get Child Progress",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "progress",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f14e5a2-cf27-43bb-802b-3506d1c4f2c4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Progress data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "23dbbc3e-3e1e-4187-8f02-0427dbf9dbd6"
                  }
                }
              ]
            },
            {
              "id": "deafb901-ab53-40a6-bea1-9a0ac4a036c0",
              "name": "Get Child Attendance",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "dashboard",
                    "attendance",
                    "{{child_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Attendance data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f000a7e0-0572-4d31-ae7f-1d7a1f5ae716",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fae3b04f-7699-4f3d-8e4b-7b6ab14a933e",
          "scriptId": "6ed01efc-d52a-4e71-bb82-b0fba9454e2d",
          "execution": "483ffb5f-ddf8-4abb-be40-508ac50647f2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Children list is array",
          "message": "expected { Object (parent, children, ...) } to be an array",
          "stack": "AssertionError: expected { Object (parent, children, ...) } to be an array\n   at Object.eval sandbox-script.js:3:6)",
          "checksum": "bce2ad330fb6b6036c48f5db279def07",
          "id": "c676bce9-1bdc-43de-a241-95ce53ae58d7",
          "timestamp": 1750795424127,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "55454a2b-f4e8-4604-9e19-09880bc2c7d2",
          "name": "Get Parent Children",
          "request": {
            "url": {
              "path": [
                "parent",
                "children"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{parent_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c2fd370-5fd8-4564-9105-b0b8837e56a6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Children list is array\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data).to.be.an('array');",
                  "});",
                  "pm.test(\"Set child_id for further tests\", () => {",
                  "    const json = pm.response.json();",
                  "    if (json.data && json.data.children && json.data.children.length > 0) {",
                  "        pm.collectionVariables.set('child_id', json.data.children[0].child.id);",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "529911cd-566f-4327-ac49-71efc70a0616"
              }
            }
          ]
        },
        "parent": {
          "id": "f1e09af8-4662-485a-96b8-4d31d424d041",
          "name": "Parent Management",
          "item": [
            {
              "id": "55454a2b-f4e8-4604-9e19-09880bc2c7d2",
              "name": "Get Parent Children",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "children"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2fd370-5fd8-4564-9105-b0b8837e56a6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Children list is array\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.be.an('array');",
                      "});",
                      "pm.test(\"Set child_id for further tests\", () => {",
                      "    const json = pm.response.json();",
                      "    if (json.data && json.data.children && json.data.children.length > 0) {",
                      "        pm.collectionVariables.set('child_id', json.data.children[0].child.id);",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "529911cd-566f-4327-ac49-71efc70a0616"
                  }
                }
              ]
            },
            {
              "id": "da0dd567-dc2f-4bab-92d3-3a90a1ac4053",
              "name": "Link Parent to Child",
              "request": {
                "url": {
                  "path": [
                    "parent",
                    "link-child"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{parent_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"childId\": \"{{child_id}}\",\n  \"relationship\": \"parent\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "761a3a6a-c3f7-4da7-af29-6088cf9ed43b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", () => {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "pm.test(\"Response success is true\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.success).to.be.true;",
                      "});",
                      "pm.test(\"Link data exists\", () => {",
                      "    const json = pm.response.json();",
                      "    pm.expect(json.data).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "49fb6397-cfe9-403e-b2d3-cf3e1ad84bbb"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5adfb04f-e84c-4c7d-8a76-7c345a9514fa",
          "length": 9,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a04ec462-a465-438d-a3cb-546692eede22",
          "scriptId": "4c2fd370-5fd8-4564-9105-b0b8837e56a6",
          "execution": "529911cd-566f-4327-ac49-71efc70a0616"
        }
      }
    ],
    "error": null
  }
}