{
  "info": {
    "name": "Program Coordinator API Tests",
    "description": "Comprehensive test suite for Program Coordinator API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Coordinator Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response has token\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    pm.expect(json.data.token).to.exist;",
                  "    pm.collectionVariables.set('coordinator_token', json.data.token);",
                  "    pm.globals.set('coordinator_token', json.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@medh.co\",\n  \"password\": \"Admin@123\"\n}"
            },
            "url": "{{base_url}}/auth/login"
          }
        }
      ]
    },
    {
      "name": "Dashboard",
      "item": [
        {
          "name": "Get Dashboard Overview",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Dashboard data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.recent_activities).to.be.an('array');",
                  "    pm.expect(json.data.quick_stats).to.exist;",
                  "    pm.expect(json.data.quick_access).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/dashboard/overview"
          }
        }
      ]
    },
    {
      "name": "Course Oversight",
      "item": [
        {
          "name": "Get All Courses",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Courses data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.courses).to.be.an('array');",
                  "    pm.expect(json.data.pagination).to.exist;",
                  "});",
                  "pm.test(\"Set course_id for further tests\", () => {",
                  "    const json = pm.response.json();",
                  "    if (json.data.courses && json.data.courses.length > 0) {",
                  "        pm.collectionVariables.set('course_id', json.data.courses[0]._id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/coordinator/courses?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["coordinator", "courses"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Get Course Progress",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Course progress data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.overall_progress).to.be.a('number');",
                  "    pm.expect(json.data.module_progress).to.be.an('array');",
                  "    pm.expect(json.data.student_performance).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/courses/{{course_id}}/progress"
          }
        },
        {
          "name": "Submit Course Feedback",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Feedback submitted successfully\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.feedback_id).to.exist;",
                  "    pm.expect(json.data.status).to.equal('pending_review');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"feedback_type\": \"improvement\",\n  \"subject\": \"Module Enhancement Suggestion\",\n  \"description\": \"Add more interactive elements to Module 6\",\n  \"priority\": \"medium\",\n  \"suggested_actions\": [\"Add quiz\", \"Include practical exercises\"]\n}"
            },
            "url": "{{base_url}}/coordinator/courses/{{course_id}}/feedback"
          }
        }
      ]
    },
    {
      "name": "Enrollment Management",
      "item": [
        {
          "name": "Get Enrollment Applications",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Applications data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.applications).to.be.an('array');",
                  "    pm.expect(json.data.summary).to.exist;",
                  "});",
                  "pm.test(\"Set application_id for further tests\", () => {",
                  "    const json = pm.response.json();",
                  "    if (json.data.applications && json.data.applications.length > 0) {",
                  "        pm.collectionVariables.set('application_id', json.data.applications[0].application_id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/coordinator/enrollments/applications?status=pending&page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["coordinator", "enrollments", "applications"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Review Enrollment Application",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Application reviewed successfully\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.decision).to.equal('approved');",
                  "    pm.expect(json.data.review_date).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"decision\": \"approved\",\n  \"reason\": \"Meets all requirements\",\n  \"notes\": \"Strong background and motivation\",\n  \"batch_assignment\": \"morning_batch_001\"\n}"
            },
            "url": "{{base_url}}/coordinator/enrollments/{{application_id}}/review"
          }
        },
        {
          "name": "Get Waitlist",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Waitlist data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.waitlisted_students).to.be.an('array');",
                  "    pm.expect(json.data.waitlist_stats).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/enrollments/waitlist"
          }
        }
      ]
    },
    {
      "name": "Class Management",
      "item": [
        {
          "name": "Monitor Classes",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Class monitoring data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.classes).to.be.an('array');",
                  "    pm.expect(json.data.summary).to.exist;",
                  "});",
                  "pm.test(\"Set class_id for further tests\", () => {",
                  "    const json = pm.response.json();",
                  "    if (json.data.classes && json.data.classes.length > 0) {",
                  "        pm.collectionVariables.set('class_id', json.data.classes[0].class_id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/classes/monitor"
          }
        },
        {
          "name": "Report Class Issue",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Issue reported successfully\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.issue_id).to.exist;",
                  "    pm.expect(json.data.status).to.equal('open');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"class_id\": \"{{class_id}}\",\n  \"issue_type\": \"technical\",\n  \"severity\": \"medium\",\n  \"description\": \"Audio quality issues during live session\",\n  \"immediate_action_required\": false\n}"
            },
            "url": "{{base_url}}/coordinator/classes/issues/report"
          }
        },
        {
          "name": "Get Class Feedback",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Feedback data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.feedback_summary).to.exist;",
                  "    pm.expect(json.data.feedback_categories).to.exist;",
                  "    pm.expect(json.data.recent_feedback).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/classes/feedback"
          }
        }
      ]
    },
    {
      "name": "Instructor Management",
      "item": [
        {
          "name": "Assign Instructor to Course",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Instructor assigned successfully\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.assignment_id).to.exist;",
                  "    pm.expect(json.data.status).to.equal('active');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"course_id\": \"{{course_id}}\",\n  \"batch_id\": \"batch_001\",\n  \"start_date\": \"2024-02-01\",\n  \"responsibilities\": [\"Course delivery\", \"Student assessment\", \"Feedback provision\"],\n  \"compensation\": {\n    \"type\": \"hourly\",\n    \"amount\": 50,\n    \"currency\": \"USD\"\n  }\n}"
            },
            "url": "{{base_url}}/coordinator/instructors/{{instructor_id}}/assign"
          }
        },
        {
          "name": "Get Instructor Performance",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Performance data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.instructors).to.be.an('array');",
                  "    pm.expect(json.data.summary).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/instructors/performance"
          }
        },
        {
          "name": "Get Communication Messages",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Messages data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.messages).to.be.an('array');",
                  "    pm.expect(json.data.summary).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/communication/messages"
          }
        }
      ]
    },
    {
      "name": "Attendance Management",
      "item": [
        {
          "name": "Get Attendance Reports",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Attendance reports data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.summary).to.exist;",
                  "    pm.expect(json.data.by_course).to.be.an('array');",
                  "    pm.expect(json.data.by_instructor).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/attendance/reports"
          }
        },
        {
          "name": "Edit Attendance Record",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Attendance updated successfully\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.new_status).to.equal('excused');",
                  "    pm.expect(json.data.modification_date).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"student_id\": \"student_123\",\n  \"status\": \"excused\",\n  \"reason\": \"Medical emergency\",\n  \"notes\": \"Student provided medical certificate\"\n}"
            },
            "url": "{{base_url}}/coordinator/attendance/{{attendance_id}}/edit"
          }
        },
        {
          "name": "Generate Attendance Summary",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Summary generated successfully\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.report_id).to.exist;",
                  "    pm.expect(json.data.file_url).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"report_type\": \"weekly_summary\",\n  \"filters\": {\n    \"date_range\": {\n      \"start\": \"2024-01-01\",\n      \"end\": \"2024-01-07\"\n    },\n    \"course_ids\": [\"{{course_id}}\"]\n  },\n  \"format\": \"pdf\",\n  \"include_charts\": true\n}"
            },
            "url": "{{base_url}}/coordinator/attendance/summary/generate"
          }
        }
      ]
    },
    {
      "name": "Reporting",
      "item": [
        {
          "name": "Get Program Analytics",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Analytics data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.program_overview).to.exist;",
                  "    pm.expect(json.data.key_metrics).to.exist;",
                  "    pm.expect(json.data.performance_indicators).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/reports/program-analytics"
          }
        },
        {
          "name": "Generate Custom Report",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Report generation initiated\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.report_id).to.exist;",
                  "    pm.expect(json.data.status).to.equal('generating');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"report_name\": \"Monthly Program Performance Report\",\n  \"data_sources\": [\"courses\", \"enrollments\", \"attendance\", \"instructor_performance\"],\n  \"filters\": {\n    \"date_range\": {\n      \"start\": \"2024-01-01\",\n      \"end\": \"2024-01-31\"\n    },\n    \"programs\": [\"python_fundamentals\", \"data_science\"]\n  },\n  \"metrics\": [\"completion_rate\", \"satisfaction_score\", \"attendance_rate\"],\n  \"format\": \"pdf\",\n  \"schedule\": \"one_time\"\n}"
            },
            "url": "{{base_url}}/coordinator/reports/custom"
          }
        }
      ]
    },
    {
      "name": "Resource Allocation",
      "item": [
        {
          "name": "Get Resources Overview",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Resources data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.resource_summary).to.exist;",
                  "    pm.expect(json.data.resource_categories).to.exist;",
                  "    pm.expect(json.data.allocation_by_course).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/resources/overview"
          }
        },
        {
          "name": "Allocate Resource",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Resource allocated successfully\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.allocation_id).to.exist;",
                  "    pm.expect(json.data.status).to.equal('active');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"resource_id\": \"resource_123\",\n  \"course_id\": \"{{course_id}}\",\n  \"quantity\": 5,\n  \"allocation_period\": {\n    \"start\": \"2024-02-01\",\n    \"end\": \"2024-05-01\"\n  },\n  \"notes\": \"Additional licenses for expanded batch\"\n}"
            },
            "url": "{{base_url}}/coordinator/resources/allocate"
          }
        },
        {
          "name": "Get Resource Utilization",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
                  "pm.test(\"Response success is true\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "});",
                  "pm.test(\"Utilization data exists\", () => {",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.data.utilization_metrics).to.exist;",
                  "    pm.expect(json.data.by_resource_type).to.exist;",
                  "    pm.expect(json.data.underutilized_resources).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coordinator_token}}"
              }
            ],
            "url": "{{base_url}}/coordinator/resources/utilization"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080/api/v1",
      "type": "string"
    },
    {
      "key": "coordinator_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "course_id",
      "value": "course_1",
      "type": "string"
    },
    {
      "key": "application_id",
      "value": "app_001",
      "type": "string"
    },
    {
      "key": "class_id",
      "value": "class_001",
      "type": "string"
    },
    {
      "key": "instructor_id",
      "value": "instructor_1",
      "type": "string"
    },
    {
      "key": "attendance_id",
      "value": "attendance_123",
      "type": "string"
    }
  ]
}